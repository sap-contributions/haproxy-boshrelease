---

groups:
  - name: haproxy-boshrelease
    jobs:
      - unit-tests
      - unit-tests-pr
      - acceptance-tests
      - acceptance-tests-pr
      - pre
      - rc
      - shipit
      - patch
      - minor
      - major
      - autobump-dependencies

jobs:
  - name: unit-tests
    public: true
    serial: true
    plan:
    - do:
      - get: git
        trigger: true
      - task: lint
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: cf-routing.common.repositories.cloud.sap/haproxy-boshrelease-testflight
              tag:        latest
              username:   ((docker.username))
              password:   ((docker.password))
          inputs:
            - { name: git }
          caches:
          - path: git/vendor/cache
          - path: git/.bundle
          run:
            path: ./git/ci/scripts/lint
            args: []
          params:
            REPO_ROOT: git
      - task: unit-tests
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: cf-routing.common.repositories.cloud.sap/haproxy-boshrelease-testflight
              tag:        latest
              username:   ((docker.username))
              password:   ((docker.password))
          inputs:
            - { name: git }

          caches:
          - path: git/vendor/cache
          - path: git/.bundle
          run:
            path: ./git/ci/scripts/unit-tests
            args: []
          params:
            REPO_ROOT: git
      on_failure:
        put: notify
        params:
          channel:  "#haproxy-boshrelease"
          username: ci-bot
          icon_url: "((slack.icon))"
          text:    "((slack.fail_url)) haproxy-boshrelease : unit-tests job failed"

  - name: unit-tests-pr
    public: true
    serial: true
    plan:
    - do:
      - { get: git-pull-requests, trigger: true, version: every }
      - put: git-pull-requests
        params:
          path: git-pull-requests
          status: pending
          context: unit-tests
      - task: lint
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: cf-routing.common.repositories.cloud.sap/haproxy-boshrelease-testflight
              tag:        latest
              username:   ((docker.username))
              password:   ((docker.password))
          inputs:
            - { name: git-pull-requests }
          caches:
          - path: git-pull-requests/vendor/cache
          - path: git-pull-requests/.bundle
          run:
            path: ./git-pull-requests/ci/scripts/lint
            args: []
          params:
            REPO_ROOT: git-pull-requests
      - task: unit-tests
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: cf-routing.common.repositories.cloud.sap/haproxy-boshrelease-testflight
              tag:        latest
              username:   ((docker.username))
              password:   ((docker.password))
          inputs:
            - { name: git-pull-requests }
          caches:
          - path: git-pull-requests/vendor/cache
          - path: git-pull-requests/.bundle
          run:
            path: ./git-pull-requests/ci/scripts/unit-tests
            args: []
          params:
            REPO_ROOT: git-pull-requests
    on_success:
      put: git-pull-requests
      params:
        path: git-pull-requests
        status: success
        context: unit-tests
    on_failure:
      put: git-pull-requests
      params:
        path: git-pull-requests
        status: failure
        context: unit-tests


  - name: acceptance-tests
    public: true
    serial: true
    plan:
    - do:
      - in_parallel:
        - { get: git, trigger: true, passed: [unit-tests] }
        - { get: stemcell }
        - { get: stemcell-bionic }
        - { get: bpm }
      - task: acceptance-tests
        privileged: true
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: cf-routing.common.repositories.cloud.sap/haproxy-boshrelease-testflight
              tag:        latest
              username:   ((docker.username))
              password:   ((docker.password))
          inputs:
            - { name: git }
            - { name: stemcell }
            - { name: stemcell-bionic }
            - { name: bpm }
          run:
            path: ./git/ci/scripts/acceptance-tests
            args: []
          params:
            REPO_ROOT:            git
      on_failure:
        put: notify
        params:
          channel:  "#haproxy-boshrelease"
          username: ci-bot
          icon_url: "((slack.icon))"
          text:    "((slack.fail_url)) haproxy-boshrelease : acceptance tests failed"

  - name: acceptance-tests-pr
    public: true
    serial: true
    plan:
    - do:
      - { get: git-pull-requests, trigger: true, version: every }
      - { get: stemcell }
      - { get: stemcell-bionic }
      - { get: bpm }
      - put: git-pull-requests
        params:
          path: git-pull-requests
          status: pending
          context: acceptance-tests
        get_params:
          list_changed_files: true
      - task: acceptance-tests
        privileged: true
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: cf-routing.common.repositories.cloud.sap/haproxy-boshrelease-testflight
              tag:        latest
              username:   ((docker.username))
              password:   ((docker.password))
          inputs:
            - { name: git-pull-requests }
            - { name: stemcell }
            - { name: stemcell-bionic }
            - { name: bpm }
          run:
            path: ./git-pull-requests/ci/scripts/acceptance-tests
            args: []
          params:
            REPO_ROOT:            git-pull-requests
    on_success:
      put: git-pull-requests
      params:
        path: git-pull-requests
        status: success
        context: acceptance-tests
    on_failure:
      put: git-pull-requests
      params:
        path: git-pull-requests
        status: failure
        context: acceptance-tests

  - name: pre
    public: true
    serial: true
    plan:
    - do:
      - get: git
        passed:
        - acceptance-tests
        trigger: true
      - get: version
        trigger: true
      - task: release-notes
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: cf-routing.common.repositories.cloud.sap/haproxy-boshrelease-testflight
              tag:        latest
              username:   ((docker.username))
              password:   ((docker.password))
          run:
            path: sh
            args:
            - -ce
            - |
              cd git
              if [ -f ci/release_notes.md ]; then
                echo "######   RELEASE NOTES   ###############"
                echo
                cat ci/release_notes.md
                echo
                echo "########################################"
                echo
              else
                echo "NO RELEASE NOTES HAVE BEEN WRITTEN"
                echo "You *might* want to do that before"
                echo "hitting (+) on that shipit job..."
                echo
              fi
          inputs:
          - name: git
      on_failure:
        put: notify
        params:
          channel:  "#haproxy-boshrelease"
          username: ci-bot
          icon_url: "((slack.icon))"
          text: release candidate job 'pre' failed (which is unusual).
          ok: false

  - name: rc
    public: true
    plan:
    - do:
      - in_parallel:
          - { get: git,     trigger: true,  passed: [pre] }
          - { get: version, trigger: false, params: {pre: rc} }
      - put: version
        params: {file: version/number}
      on_failure:
        put: notify
        params:
          channel:  "#haproxy-boshrelease"
          username: ci-bot
          icon_url: "((slack.icon))"
          text:    "((slack.fail_url)) haproxy-boshrelease : rc job failed"

  - name: patch
    public: true
    plan:
      - do:
          - { get: version, trigger: false, params: {bump: patch} }
          - { put: version,                 params: {file: version/number} }
        on_failure:
          put: notify
          params:
            channel:  "#haproxy-boshrelease"
            username: ci-bot
            icon_url: "((slack.icon))"
            text:    "((slack.fail_url)) haproxy-boshrelease : patch job failed"

  - name: minor
    public: true
    plan:
    - do:
      - { get: version, trigger: false, params: {bump: minor} }
      - { put: version,                 params: {file: version/number} }
      on_failure:
        put: notify
        params:
          channel:  "#haproxy-boshrelease"
          username: ci-bot
          icon_url: "((slack.icon))"
          text:    "((slack.fail_url)) haproxy-boshrelease : minor job failed"

  - name: major
    public: true
    plan:
    - do:
      - { get: version, trigger: false, params: {bump: major} }
      - { put: version,                 params: {file: version/number} }
      on_failure:
        put: notify
        params:
          channel:  "#haproxy-boshrelease"
          username: ci-bot
          icon_url: "((slack.icon))"
          text:    "((slack.fail_url)) haproxy-boshrelease : major job failed"

  - name: shipit
    public: true
    serial: true
    plan:
    - do:
      - in_parallel:
          - { get: version, passed: [rc], params: {bump: final} }
          - { get: git,     passed: [rc] }
      - task: release
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: cf-routing.common.repositories.cloud.sap/haproxy-boshrelease-testflight
              tag:        latest
              username:   ((docker.username))
              password:   ((docker.password))
          inputs:
            - name: version
            - name: git
          outputs:
            - name: gh
            - name: pushme
            - name: notifications
          run:
            path: ./git/ci/scripts/shipit
            args: []
          params:
            REPO_ROOT:    git
            VERSION_FROM: version/number
            RELEASE_ROOT: gh
            REPO_OUT:     pushme
            NOTIFICATION_OUT: notifications
            BRANCH:        master
            GITHUB_OWNER:  cloudfoundry
            GIT_USER_NAME:  ((github.bot_user))
            GIT_USER_EMAIL: ((github.bot_email))
            GCP_SERVICE_KEY: ((gcp.service_key))

      - put: git
        params:
          rebase: true
          repository: pushme/git
          branch: release
      - put: blobstore
        params:
          file:  "gh/artifacts/haproxy-*.tgz"
      - put: github
        params:
          name:   gh/name
          tag:    gh/tag
          body:   gh/notes.md
          globs: [gh/artifacts/*, gh/artifacts-patched/*]
      - put: notify
        params:
          channel:  "#haproxy-boshrelease"
          username: ci-bot
          icon_url: "((slack.icon))"
          text_file: notifications/message
      on_failure:
        put: notify
        params:
          channel:  "#haproxy-boshrelease"
          username: ci-bot
          icon_url: "((slack.icon))"
          text:    "((slack.fail_url)) haproxy-boshrelease : shipit job failed"
  - name: autobump-dependencies
    public: true
    serial: true
    plan:
      - do:
          - get: daily
            trigger: true
          - get: git
          - task: autobump-dependencies
            config:
              inputs:
                - name: git
              platform: linux
              image_resource:
                type: docker-image
                source:
                  repository: cf-routing.common.repositories.cloud.sap/haproxy-boshrelease-testflight
                  tag: latest
                  username: ((docker.username))
                  password: ((docker.password))
              run:
                dir: git
                path: /usr/bin/python3
                args: ["ci/scripts/autobump-dependencies.py"]
              params:
                REPO_ROOT: git
                PR_BASE: master
                PR_ORG: cloudfoundry
                PR_LABEL: run-ci

                GCP_SERVICE_KEY: ((gcp.service_key))
                GITHUB_COM_TOKEN: ((github.access_token))

resource_types:
  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource

  - name: pull-request
    type: docker-image
    source:
      repository: cf-routing.common.repositories.cloud.sap/eirini-github-pr-resource
      tag: latest
      username: ((docker.username))
      password: ((docker.password))

  - name: gcs
    type: docker-image
    source:
      repository: frodenas/gcs-resource

resources:
  - name: git
    type: git
    source:
      uri:         https://github.com/cloudfoundry/haproxy-boshrelease
      branch:      master
      username:    ((github.bot_user))
      password:    ((github.access_token))

  - name: git-pull-requests
    type: pull-request
    source:
      access_token: ((github.access_token))
      repository:   cloudfoundry/haproxy-boshrelease
      base_branch:  master
      labels:       [run-ci]
      required_review_approvals: 1
      trusted_teams:
        - "wg-app-runtime-platform-networking-extensions-approvers"
      trusted_users:
        - "dependabot"
        - "CFN-CI"

  - name: stemcell-bionic
    type: bosh-io-stemcell
    source:
      name: bosh-warden-boshlite-ubuntu-bionic-go_agent

  - name: stemcell
    type: bosh-io-stemcell
    source:
      name: bosh-warden-boshlite-ubuntu-jammy-go_agent

  - name: bpm
    type: bosh-io-release
    source:
      repository: cloudfoundry/bpm-release

  - name: version
    type: semver
    source :
      driver:          gcs
      bucket:          haproxy-boshrelease
      key:             version-13
      json_key:        ((gcp.service_key))
      initial_version: "12.2.1"

  - name: notify
    type: slack-notification
    source:
      url: ((slack.webhook))

  - name: github
    type: github-release
    source:
      user:         cloudfoundry
      repository:   haproxy-boshrelease
      access_token: ((github.access_token))

  - name: blobstore
    type: gcs
    source:
      bucket:   haproxy-boshrelease
      json_key: ((gcp.service_key))
      regexp:   haproxy-([0-9\.+-]+).tgz

  - name: daily
    type: time
    source:
      start: 7:00 AM
      stop: 8:00 AM
      location: Europe/Berlin
      interval: 24h
